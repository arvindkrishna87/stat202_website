[
  {
    "objectID": "slides/lec04.html#todays-goals",
    "href": "slides/lec04.html#todays-goals",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "Today’s goals",
    "text": "Today’s goals\n\n\n\n\nCreate a boxplot\nCreate a barplot\nProperly describe a boxplot and barplot\nDisplay barplots in various ways by category\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "slides/lec04.html#ng4-boxplots",
    "href": "slides/lec04.html#ng4-boxplots",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "5NG#4: Boxplots",
    "text": "5NG#4: Boxplots\n\n\nA boxplot is used to visualize the distribution of a single numerical variable.\n\n\n\nGrouped boxplots are particularly useful for comparing the distribution of a numerical variable across a categorical variable. ie: shows the relationship between a numerical and a categorical variable. \n\n\n\n\nBoxplot syntax in R:\n\nggplot(data= my_data, aes(x = (optional categorical variable),  y = var1)) +\n  geom_boxplot()\n\nIf you switch x and y, it will just change the orientation of the boxplot (personal preference)."
  },
  {
    "objectID": "slides/lec04.html#ng4-boxplots-1",
    "href": "slides/lec04.html#ng4-boxplots-1",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "5NG#4: Boxplots",
    "text": "5NG#4: Boxplots\n\n\n\n\nThere are 3 things that we typically focus on and describe/compare when inspecting a boxplot:\n\ncenter\nspread\nshape and outliers"
  },
  {
    "objectID": "slides/lec04.html#binary-variables",
    "href": "slides/lec04.html#binary-variables",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "Binary Variables",
    "text": "Binary Variables\n Consider the titanic dataset, which contains information about passengers on the titanic. If a passenger survived, then the variable Survived = 1. \n\ntitanic %>% \n  #select(PassengerId, Survived, Sex) %>%\n  glimpse()\n\nRows: 32\nColumns: 4\n$ Class    <chr> \"1st\", \"2nd\", \"3rd\", \"Crew\", \"1st\", \"2nd\", \"3rd\", \"Crew\", \"1s…\n$ Sex      <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\",…\n$ Age      <chr> \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\"…\n$ Survived <fct> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1…\n\n\n\n Is Survived a categorical or numerical variable?\n\n\nR will read in numerical columns as “numbers” even though these numbers are supposed to represent “categories”.\n\n\nTo fix this we need to use the factor() function.\nTyping factor(Survived) would turn the variable into a “factor”."
  },
  {
    "objectID": "slides/lec04.html#ng5-barplots",
    "href": "slides/lec04.html#ng5-barplots",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "5NG#5: Barplots",
    "text": "5NG#5: Barplots\nA barplot is used to visualize the distribution (frequencies) of a single categorical variable.\n\n\ngeom_bar() is used when we have the raw data and counting how many observations are in each category has to be done (list not yet counted).\n\n\n\n\ngeom_col() is used when we directly have counts of each category in our dataset (pre-counted).\n\n\n\nBarplot syntax in R:\n\nggplot(data= my_data, aes(x = var1)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/lec04.html#ng5-barplots-continued",
    "href": "slides/lec04.html#ng5-barplots-continued",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "5NG#5: Barplots continued",
    "text": "5NG#5: Barplots continued\nWhen describing a barplot we look for…\n\n\nDisparities in the height of the bars.\nBar with the most observations.\nBar with the least observations.\nIf all the bars are about equal height, then the distribution is uniform."
  },
  {
    "objectID": "slides/lec04.html#example-1-barplots",
    "href": "slides/lec04.html#example-1-barplots",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "Example 1: Barplots",
    "text": "Example 1: Barplots\n\n\n\nConsider the Palmer Penguins dataset.\n\nlibrary(palmerpenguins)\nhead(penguins)\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n\n\nWe are interested in plotting the distribution of species.\nAre we using geom_bar() or geom_col()?"
  },
  {
    "objectID": "slides/lec04.html#example-2-barplots",
    "href": "slides/lec04.html#example-2-barplots",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "Example 2: Barplots",
    "text": "Example 2: Barplots\nWhat if we want to visualize the distribution of sex in each of the species. There are 4 main ways to visualize multiple levels within a categorical data:\n\nggplot(data=penguins, aes(x = species, fill = sex)) +\n  geom_bar()\n\n\n\n\n\nggplot(data=penguins, aes(x = species, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  ylab(\"proportion\")\n\n\n\n\n\nggplot(data=penguins, aes(x = species, fill = sex)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\nggplot(data=penguins, aes(x = species))+\n  geom_bar() +\n  facet_wrap(~ sex)"
  },
  {
    "objectID": "slides/lec04.html#extra-information-and-resources",
    "href": "slides/lec04.html#extra-information-and-resources",
    "title": "Data Visualization  Sections 2.7 - 2.9",
    "section": "Extra information and resources",
    "text": "Extra information and resources\n“factor” vs “character” variable\n\nfactor has predefined levels and the observation must be one of those levels (limited response options).\ncharacter can take on any string value (think open response options)\nFactors in R"
  }
]