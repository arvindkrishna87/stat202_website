{
  "hash": "4a2d4a6c523b55b6d33163595a93bfb8",
  "result": {
    "markdown": "---\ntitle: \"Tidy Data <br> Chapter 4\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\n\nlogo: nu_logo.png\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\n    fig-cap-location: top\n\nexecute:\n  message: false\n  warning: false\n  echo: true\n---\n\n\n\n\n## Today's goals {background-image=\"images_horst/tidyverse_celestial.png\" background-size=\"400px\" background-opacity=\"50%\" background-position=\"85% 50%\"}\n\n<br/>\n\n::: columns\n::: {.column width=\"60%\"}\n1.  Import datasets\n2.  Can you determine if a dataset is tidy or messy?\n3.  Conduct an EDA\n:::\n:::\n\n::: {.absolute top=\"80%\" left=\"90%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n## Importing Data\n\nUse the `tidyverse` and `readxl` packages to import data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Import .csv\nfilename <- read_csv(\"data/filename.csv\")\n#Import .xlsx \nfilename <- read_excel(\"data/filename.xlsx\")\n#Import .rds\nfilename <- read_RDS(\"data/filename.rds\")\n#Load .rda \nload(\"data/filename.rda\")\n```\n:::\n\n\nComputers are not smart! It can only access files that are sitting in your `working directory`. You must direct the computer to the file your data is located in!\n\n## Tidy Data\n\nThere are three interrelated rules which make a dataset tidy:\n\n-   Each variable must have its own column.\n-   Each observation must have its own row.\n-   Each value must have its own cell.\n\n## Tidy Data (continued)\n\nWhich of the following are tidy?\n\n::: {layout-ncol=\"2\"}\n![a)](images_lecture/tidy5.PNG)\n\n![b)](images_lecture/tidy6.PNG)\n:::\n\n## EDA\n\nBefore using your data to make inferences, you should conduct an exploratory data analysis.\n\nYou do this by:\n\n-   looking at the raw data: `skim(data)`\n-   looking at the summary stats: mean, sd, median, min, max, missing values\n-   and visualizing the data: `ggplot()`\n\nThis helps you understand the data, form hypothesis, and aid in interpreting results.\n\n## Example: EDA {.scrollable .smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nskim(penguins)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |penguins |\n|Number of rows           |344      |\n|Number of columns        |8        |\n|_______________________  |         |\n|Column type frequency:   |         |\n|factor                   |3        |\n|numeric                  |5        |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                  |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------------|\n|species       |         0|          1.00|FALSE   |        3|Ade: 152, Gen: 124, Chi: 68 |\n|island        |         0|          1.00|FALSE   |        3|Bis: 168, Dre: 124, Tor: 52 |\n|sex           |        11|          0.97|FALSE   |        2|mal: 168, fem: 165          |\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|    mean|     sd|     p0|     p25|     p50|    p75|   p100|hist                                     |\n|:-----------------|---------:|-------------:|-------:|------:|------:|-------:|-------:|------:|------:|:----------------------------------------|\n|bill_length_mm    |         2|          0.99|   43.92|   5.46|   32.1|   39.23|   44.45|   48.5|   59.6|▃▇▇▆▁ |\n|bill_depth_mm     |         2|          0.99|   17.15|   1.97|   13.1|   15.60|   17.30|   18.7|   21.5|▅▅▇▇▂ |\n|flipper_length_mm |         2|          0.99|  200.92|  14.06|  172.0|  190.00|  197.00|  213.0|  231.0|▂▇▃▅▂ |\n|body_mass_g       |         2|          0.99| 4201.75| 801.95| 2700.0| 3550.00| 4050.00| 4750.0| 6300.0|▃▇▆▃▂ |\n|year              |         0|          1.00| 2008.03|   0.82| 2007.0| 2007.00| 2008.00| 2009.0| 2009.0|▇▁▇▁▇ |\n:::\n:::\n",
    "supporting": [
      "lec07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}