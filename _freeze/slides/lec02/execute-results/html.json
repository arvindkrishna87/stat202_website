{
  "hash": "ec382648c31042384133d33c64170456",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization <br> Sections 2.0 - 2.3\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\n\nlogo: nu_logo.png\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\n\nexecute:\n  message: false\n  warning: false\n  echo: true\n---\n\n\n\n\n## Today's goals {background-image=\"images_horst/ggplot2_exploratory.png\" background-size=\"400px\" background-opacity=\"50%\" background-position=\"80% 50%\"}\n\n<br/>\n\n::: columns\n::: {.column width=\"60%\"}\n1.  Create a scatterplot\n2.  Properly describe a scatterplot\n3.  Change aesthetics such as color and shape in your plot\n4.  Solve overplotting issues\n:::\n:::\n\n::: {.absolute top=\"79%\" left=\"85%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n## The Grammar of Graphics {.smaller}\n\n::: {.absolute top=\"0%\" left=\"85%\"}\n![](images_lecture/grammar_graphics.png){#id .class width=\"300px\" height=\"200px\"}\n:::\n\n::: columns\n::: {.column width=\"85%\"}\nDefines a set of rules for constructing statistical graphics by combining different types of **layers**.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"vdpouchfba\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#vdpouchfba .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 24px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vdpouchfba .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vdpouchfba .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_col_heading {\n  color: #333333;\n  background-color: #D3D3D3;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vdpouchfba .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #D3D3D3;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vdpouchfba .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vdpouchfba .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vdpouchfba .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vdpouchfba .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vdpouchfba .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vdpouchfba .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vdpouchfba .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vdpouchfba .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vdpouchfba .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vdpouchfba .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vdpouchfba .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vdpouchfba .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vdpouchfba .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vdpouchfba .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vdpouchfba .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vdpouchfba .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vdpouchfba .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vdpouchfba .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vdpouchfba .gt_left {\n  text-align: left;\n}\n\n#vdpouchfba .gt_center {\n  text-align: center;\n}\n\n#vdpouchfba .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vdpouchfba .gt_font_normal {\n  font-weight: normal;\n}\n\n#vdpouchfba .gt_font_bold {\n  font-weight: bold;\n}\n\n#vdpouchfba .gt_font_italic {\n  font-style: italic;\n}\n\n#vdpouchfba .gt_super {\n  font-size: 65%;\n}\n\n#vdpouchfba .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#vdpouchfba .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vdpouchfba .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vdpouchfba .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vdpouchfba .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vdpouchfba .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vdpouchfba .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Layer</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Function</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Explanation</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">Data</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; color: #0000FF; padding-left: 40px;padding-right: 40px;\">ggplot( )</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">initialize plot and define dataset first</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">Aesthetics</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; color: #0000FF; padding-left: 40px;padding-right: 40px;\">aes( )</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">how variables are mapped</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">Geometries</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; color: #0000FF; padding-left: 40px;padding-right: 40px;\">geom_*( )</td>\n<td class=\"gt_row gt_left\" style=\"font-weight: bold; padding-left: 40px;padding-right: 40px;\">how data is conveyed</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">Facets</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">facet_*( )</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">separates plots by categories</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">Statistics</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">stat_*( )</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">statistical transformations</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">Coordinates</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">coord_*( )</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">customize coord system</td></tr>\n    <tr><td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">Theme</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">theme( )</td>\n<td class=\"gt_row gt_left\" style=\"color: #666666; padding-left: 40px;padding-right: 40px;\">customize non-data components</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n:::\n:::\n\n<br>\n\nOnly the *first three* layers are essential components that must be defined when building a graphic.\n\n## The 5 named graphs (5NG)\n\n-   scatterplot\n-   linegraph\n-   histogram\n-   boxplot\n-   bargraph\n\n## 5NG#1: Scatterplots\n\n<br>\n\nScatterplots allow you to visualize the **relationship** between 2 **numerical** variables.\n\n<br>\n\n**Scatterplot syntax in R:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= my_data, mapping = aes(x = var1, y = var2)) +\n  geom_point()\n```\n:::\n\n\n<br>\n\n**Scatterplot language:** Construct a scatterplot of **Y by X**.\n\n## 5NG#1: Scatterplots\n\nWhen describing scatterplots...\n\n-   Look for pattern going from left to right.\n-   Classify association as positive, negative, or no association.\n-   Classify strength of association: strong, moderate, weak.\n-   Describe overall pattern: linear, nonlinear, etc.\n-   Check for overplotting issues.\n\n## Example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nhead(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 8\n  species island    bill_length_mm bill_depth_mm flipper_l~1 body_~2 sex    year\n  <fct>   <fct>              <dbl>         <dbl>       <int>   <int> <fct> <int>\n1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n2 Adelie  Torgersen           39.5          17.4         186    3800 fema~  2007\n3 Adelie  Torgersen           40.3          18           195    3250 fema~  2007\n4 Adelie  Torgersen           NA            NA            NA      NA <NA>   2007\n5 Adelie  Torgersen           36.7          19.3         193    3450 fema~  2007\n6 Adelie  Torgersen           39.3          20.6         190    3650 male   2007\n# ... with abbreviated variable names 1: flipper_length_mm, 2: body_mass_g\n```\n:::\n:::\n\n\n::: {.absolute top=\"60%\" left=\"10%\"}\n![](images_horst/palmer_penguin_species.png){.class width=\"400px\" height=\"300px\"}\n:::\n\n::: {.absolute top=\"60%\" left=\"70%\"}\n![](images_horst/palmer_penguin.png){.class width=\"300px\" height=\"250px\"}\n:::\n\n::: {.absolute top=\"85%\" left=\"85%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n## Example 1: Describing scatterplots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_length_mm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lec02_files/figure-revealjs/unnamed-chunk-4-1.png){width=700px height=450px}\n:::\n:::\n\n\n## Example 2: Describing scatterplots {auto-animate=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lec02_files/figure-revealjs/unnamed-chunk-5-1.png){width=700px height=450px}\n:::\n:::\n\n\n## Example 2: Describing scatterplots {auto-animate=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm, color = sex)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lec02_files/figure-revealjs/unnamed-chunk-6-1.png){width=700px height=450px}\n:::\n:::\n\n\n## Example 2: Describing scatterplots {auto-animate=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm, color = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lec02_files/figure-revealjs/unnamed-chunk-7-1.png){width=700px height=450px}\n:::\n:::\n\n\n## Common Coding Errors {.scrollable}\n\n1.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm)) +\n  geom_point() +\n```\n:::\n\n\n::: fragment\n![](images_lecture/error_2a.png){width=\"900px\" height=\"100px\"}\n:::\n\n::: fragment\nPlus sign to nowhere. What would happen if you type \"1+2+\" into a calculator? An error!\n:::\n\n2.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm) +\n  geom_point()\n```\n:::\n\n\n::: fragment\n![](images_lecture/error_2b.png){width=\"900px\" height=\"100px\"}\n:::\n\n::: fragment\nAll parenthesis must me closed!\n:::\n\n3.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Penguins, aes(x=Flipper_length_mm, y=Bill_depth_mm) +\n  geom_point()\n```\n:::\n\n\n::: fragment\n![](images_lecture/error_2c.png){width=\"900px\" height=\"100px\"}\n:::\n\n::: fragment\nR is case sensitive! Make sure the data and variable names match EXACTLY.\n:::\n\n## Extra information and resources {.scrollable}\n\n<br>\n\n-   [ggplot2 cheatsheet link](https://www.rstudio.com/resources/cheatsheets/)\n\n-   Numerical vs Categorical data examples:\n\n![](images_lecture/data_types.png){.class width=\"500px\" height=\"300px\"}\n",
    "supporting": [
      "lec02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}