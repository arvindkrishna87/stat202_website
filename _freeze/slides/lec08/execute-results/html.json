{
  "hash": "6e5d5a31b0c23ad62f33e11290913bc2",
  "result": {
    "markdown": "---\ntitle: \"Regression <br> Chapter 5.0 - 5.1\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\nlogo: \"www/nu_logo.png\"\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\nexecute:\n  message: false\n  warning: false\n  echo: true\neditor_options: \n  chunk_output_type: console\n  \nserver: shiny\n---\n\n\n\n\n\n## Today's goals {background-image=\"www/tidydata_5.png\" background-size=\"600px\" background-opacity=\"70%\" background-position=\"95% 50%\"}\n\n<br/>\n\n::: columns\n::: {.column width=\"60%\"}\n1.  Find the correlation between two variables\n2.  Build and interpret a linear regression model\n3.  Make predictions using a linear regression model\n4.  Plot the line of best fit on a scatterplot\n:::\n:::\n\n\n::: {.absolute top=\"72%\" left=\"85%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n## A Note about Regression\n\n<br>\n\nRemember that, BEFORE building a model, you should conduct an **exploratory data analysis**. \n\n<br>\n\nYou will almost certainly need to do some data wrangling and visualizations before the model analysis.\n\n<br>\n\nFor this lessons example we will be using a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n## Correlation Coefficient {.scrollable}\n\n**Correlation coefficient**: a number between -1 and 1 indicating the strength of the linear relationship between two numerical variables.\n\n<br>\n\nMatch the following graphs with the most appropriate correlation coefficient:\n\n:::{.fragment}\n1.     a) -0.2     b) 0     c) 0.4     d) 0.7\n\n![](www/cor_0.4.png)\n:::\n\n\n:::{.fragment}\n2.     a) -1     b) -0.75     c) -0.9     d) 1\n\n![](www/cor_-1.png)\n:::\n\n:::{.fragment}\n3. Distance traveled vs the amount of gas in the car.\n\na) Exactly -1     b) Between -1 and 0     c) About 0 \n\nd) Between 0 and 1     e) Exactly 1\n\n:::\n\n\n## Correlation Coefficient (continued){.scrollable}\n\nThe following code shows three different options for calculating the correlation between two variables within the `penguins` dataset.\n\n\n::: panel-tabset\n\n## Correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Option 1\npenguin_sub %>%\n  select(flipper_length_mm, body_mass_g) %>% \n  cor()\n# Option 2\npenguin_sub %>%\n    summarize(cor = cor(flipper_length_mm, body_mass_g) )\n# Option 3\ncor(penguins$flipper_length_mm, penguins$body_mass_g)\n```\n:::\n\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\") %>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n:::{.fragment}\nYou will most likely need to filter out missing data beforehand OR set `use = \"complete.obs\"` inside the `cor()` function. This is the equivalent of when we set `na.rm = TRUE` in other summary functions.\n:::\n\n## Simple Linear Regression (SLR)\n\n-   **Definition**: Simple linear regression: models the relationship between a response (y) variable and one explanatory (x) variable.\n\n-   Essentially, we are finding the **line of best fit** for a scatterplot between 'x' and 'y'.\n\n## SLR (continued)\n\n**Equation** of a regression line:\n\n$$\\hat{y} = b_0 + b_1*x$$\n\n\n<br>\n\n-   $b_0$ : intercept; the **expected** value of $\\hat{y}$ when $x = 0$\n\n-   $b_1$ : slope; for every 1 unit increase in x, then $\\hat{y}$ increases **on average** by $b_1$ \n\n-   **fitted values**: $\\hat{y}$; the predicted value on the regression line\n\n-   **residuals**: $y - \\hat{y}$; error in prediction\n\n## Example 1: Model {auto-animate=\"true\"}\n\nConsider a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n::: panel-tabset\n\n## Model\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build a model\nmodel_penguin <- lm(body_mass_g ~ flipper_length_mm, data = penguin_sub)\n```\n:::\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\")%>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n## Example 1: Model {auto-animate=\"true\" .scrollable}\n\nConsider a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n::: panel-tabset\n\n## Model\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build a model\n\nmodel_penguin <- lm(body_mass_g ~ flipper_length_mm, data = penguin_sub)\n\n#Summarize the model\nsummary(model_penguin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm, data = penguin_sub)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-521.72 -177.33  -23.06  117.51  658.82 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -4111.348   1600.726  -2.568   0.0151 *  \nflipper_length_mm    40.269      8.004   5.031 1.81e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 274.8 on 32 degrees of freedom\nMultiple R-squared:  0.4417,\tAdjusted R-squared:  0.4242 \nF-statistic: 25.31 on 1 and 32 DF,  p-value: 1.814e-05\n```\n:::\n:::\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\") %>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n## Example 1: Plot regression line\n\n::: panel-tabset\n\n## Plot\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot relationship of variables\nggplot(penguin_sub, aes(x = flipper_length_mm, y = body_mass_g))+\n    geom_point()\n```\n\n::: {.cell-output-display}\n![](lec08_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_penguin)$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Estimate  Std. Error   t value     Pr(>|t|)\n(Intercept)       -4111.34753 1600.725516 -2.568428 1.508617e-02\nflipper_length_mm    40.26936    8.003689  5.031349 1.814086e-05\n```\n:::\n:::\n\n:::\n\n## Example 1: Plot regression line {.scrollable}\n\n\n::: panel-tabset\n\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\n# Add line of best fit\nggplot(penguin_sub, aes(x = flipper_length_mm, y = body_mass_g))+\n    geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](lec08_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_penguin)$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Estimate  Std. Error   t value     Pr(>|t|)\n(Intercept)       -4111.34753 1600.725516 -2.568428 1.508617e-02\nflipper_length_mm    40.26936    8.003689  5.031349 1.814086e-05\n```\n:::\n:::\n\n:::\n\n\n## Example 1: Residuals {.scrollable}\n\n\n::: panel-tabset\n\n## Visualizing\n\n\n::: {.cell .panel-sidebar}\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"pick1-label\" for=\"pick1\">Pick a penguin:</label>\n<div>\n<select id=\"pick1\"><option value=\"1\" selected>1</option>\n<option value=\"2\">2</option>\n<option value=\"3\">3</option>\n<option value=\"4\">4</option>\n<option value=\"5\">5</option>\n<option value=\"6\">6</option>\n<option value=\"7\">7</option>\n<option value=\"8\">8</option>\n<option value=\"9\">9</option>\n<option value=\"10\">10</option>\n<option value=\"11\">11</option>\n<option value=\"12\">12</option>\n<option value=\"13\">13</option>\n<option value=\"14\">14</option>\n<option value=\"15\">15</option>\n<option value=\"16\">16</option>\n<option value=\"17\">17</option>\n<option value=\"18\">18</option>\n<option value=\"19\">19</option>\n<option value=\"20\">20</option>\n<option value=\"21\">21</option>\n<option value=\"22\">22</option>\n<option value=\"23\">23</option>\n<option value=\"24\">24</option>\n<option value=\"25\">25</option>\n<option value=\"26\">26</option>\n<option value=\"27\">27</option>\n<option value=\"28\">28</option>\n<option value=\"29\">29</option>\n<option value=\"30\">30</option>\n<option value=\"31\">31</option>\n<option value=\"32\">32</option>\n<option value=\"33\">33</option>\n<option value=\"34\">34</option></select>\n<script type=\"application/json\" data-for=\"pick1\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Observed weight (y):</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<span style=\"color:#009E73\">\n<div id=\"obs\" class=\"shiny-text-output\"></div>\n</span>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Predicted weight (fitted value):</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<span style=\"color:red\">\n<div id=\"pred\" class=\"shiny-text-output\"></div>\n</span>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Residual (error):</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<span style=\"color:#E69F00\">\n<div id=\"error\" class=\"shiny-text-output\"></div>\n</span>\n```\n:::\n:::\n\n::: {.cell .panel-fill}\n::: {.cell-output-display}\n```{=html}\n<div id=\"Ex1Plot\" class=\"shiny-plot-output\" style=\"width:100%;height:400px;\"></div>\n```\n:::\n:::\n\n::: {.cell context='server'}\n\n:::\n\n\n## Calculating\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguin_sub %>% \n  mutate(fitted = fitted(model_penguin),\n         residuals = residuals(model_penguin))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 11\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n$ fitted            <dbl> 3781.446, 3660.638, 3821.716, 3821.716, 3861.985, 37~\n$ residuals         <dbl> 118.55366, -10.63827, -96.71570, -71.71570, -161.985~\n```\n:::\n:::\n\n\n:::\n\n## Example 1: Predicting\n\nRecall the equation of the regression line is \n\n\n$$\\widehat{\\hbox{body_mass_g} } = -4111.3 + 40.3*\\hbox{flipper_length}$$\n\n\n<br>\n\nYou find a new `male` penguin from the `Chinstrap` species and `Dream` island that has a flipper length of 220 mm. What do you predict his weight to be in grams?\n\n:::{.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n-4111.3 + 40.3*220\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4754.7\n```\n:::\n:::\n\n:::\n\n\npreserve4be72f5b5a827384\npreserve040c4d131c95fade\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"selectize\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.12.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/selectize\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/selectize.min.js\",\"accessibility/js/selectize-plugin-a11y.min.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/selectize.bootstrap3.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]}]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"assertthat\",\"backports\",\"base\",\"broom\",\"bslib\",\"cachem\",\"cellranger\",\"cli\",\"colorspace\",\"compiler\",\"crayon\",\"datasets\",\"DBI\",\"dbplyr\",\"digest\",\"dplyr\",\"ellipsis\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"fs\",\"gargle\",\"generics\",\"ggplot2\",\"glue\",\"googledrive\",\"googlesheets4\",\"graphics\",\"grDevices\",\"grid\",\"gtable\",\"haven\",\"hms\",\"htmltools\",\"httpuv\",\"httr\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lattice\",\"lifecycle\",\"lubridate\",\"magrittr\",\"Matrix\",\"memoise\",\"methods\",\"mgcv\",\"mime\",\"modelr\",\"munsell\",\"nlme\",\"palmerpenguins\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"readxl\",\"reprex\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"rvest\",\"sass\",\"scales\",\"shiny\",\"splines\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tools\",\"tzdb\",\"utf8\",\"utils\",\"vctrs\",\"withr\",\"xfun\",\"xml2\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.2.1\",\"1.4.1\",\"4.1.3\",\"1.0.0\",\"0.4.0\",\"1.0.6\",\"1.1.0\",\"3.3.0\",\"2.0-3\",\"4.1.3\",\"1.5.1\",\"4.1.3\",\"1.1.3\",\"2.2.1\",\"0.6.29\",\"1.0.9\",\"0.3.2\",\"0.15\",\"1.0.3\",\"2.1.1\",\"1.1.0\",\"0.5.1\",\"1.5.2\",\"1.2.0.9002\",\"0.1.3\",\"3.3.6\",\"1.6.2\",\"2.0.0\",\"1.0.0.9000\",\"4.1.3\",\"4.1.3\",\"4.1.3\",\"0.3.0\",\"2.5.0\",\"1.1.1\",\"0.5.3\",\"1.6.5\",\"1.4.3\",\"0.1.4\",\"1.8.0\",\"1.39\",\"0.4.2\",\"1.3.0\",\"0.20-45\",\"1.0.1\",\"1.8.0\",\"2.0.3\",\"1.4-0\",\"2.0.1\",\"4.1.3\",\"1.8-39\",\"0.12\",\"0.1.8\",\"0.5.0\",\"3.1-155\",\"0.1.0\",\"1.8.0\",\"2.0.3\",\"1.2.0.1\",\"0.3.4\",\"2.5.1\",\"1.0.9\",\"2.1.2\",\"1.4.0\",\"2.0.1\",\"1.0.4\",\"2.14\",\"0.13\",\"1.0.2\",\"0.4.2\",\"1.2.0\",\"1.7.2\",\"4.1.3\",\"4.1.3\",\"1.7.6\",\"1.4.0\",\"3.1.8\",\"1.2.0\",\"1.1.2\",\"1.3.2\",\"4.1.3\",\"0.3.0\",\"1.2.2\",\"4.1.3\",\"0.4.1\",\"2.5.0\",\"0.31\",\"1.3.3\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [
      "lec08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preserve040c4d131c95fade": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n",
      "preserve4be72f5b5a827384": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\n  penguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\") %>% \n  mutate(id = seq(1:34))\n\n    model_penguin <- lm(body_mass_g ~ flipper_length_mm, data = penguin_sub)\n\n    penguin_sub <- penguin_sub %>% \n  mutate(fitted_val = fitted(model_penguin),\n         residual_val = residuals(model_penguin))\n    \noutput$obs <- renderText({\n  one_peng <- penguin_sub %>% \n    filter(id == input$pick1)\n  \n  return(round(one_peng$body_mass_g,1))\n})\n\noutput$pred <- renderText({\n  one_peng <- penguin_sub %>% \n    filter(id == input$pick1)\n  \n  return(round(one_peng$fitted_val,1))\n})\n\n\noutput$error <- renderText({\n  one_peng <- penguin_sub %>% \n    filter(id == input$pick1)\n  \n  paste0(round(one_peng$body_mass_g), \" - \", round(one_peng$fitted_val,1), \" = \", round( round(one_peng$body_mass_g)-round(one_peng$fitted_val,1), 1) )\n})\n    \noutput$Ex1Plot <- renderPlot({\n  \n\n  one_peng <- penguin_sub %>% \n    filter(id == input$pick1)\n  \n  \n  ggplot(penguin_sub, \n         aes(x = flipper_length_mm, \n             y = body_mass_g))+\n    geom_point(color = \"#999999\") +\n    geom_point(data = one_peng, \n               color = \"#009E73\", size =4) +\n    annotate(\"text\", label = \"y\",\n             x = one_peng$flipper_length_mm-0.5,\n             y = one_peng$body_mass_g,\n             color = \"#009E73\",\n             size =4) +\n    geom_point(data = one_peng, \n               aes(y = fitted_val), \n               color = \"red\", size = 4)+\n    annotate(\"text\", label = expression(hat(\"y\")),\n             x = one_peng$flipper_length_mm-0.5,\n             y = one_peng$fitted_val,\n             color = \"red\",\n             size = 4) +\n    geom_segment(data = one_peng, \n                 aes(x =flipper_length_mm,\n                     xend = flipper_length_mm,\n                     y = fitted_val,\n                     yend = body_mass_g),\n                 color = \"#E69F00\",\n                 size =2)+\n    scale_y_continuous(\n      breaks = seq(3250, 4750, 250))+\n    scale_x_continuous(\n      breaks = seq(186, 214, 2))+\n  geom_smooth(method = \"lm\", se = FALSE) +\n    theme_minimal()\n  \n})\n</script>\n"
    },
    "postProcess": true
  }
}