{
  "hash": "4e56fa07eb6fd21492ecd0ef54a6fd96",
  "result": {
    "markdown": "---\ntitle: \"Regression <br> Chapter 5.0 - 5.1\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\nlogo: nu_logo.png\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\n    scrollable: true\nexecute:\n  message: false\n  warning: false\n  echo: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n## Today's goals {.smaller background-image=\"images_horst/tidydata_5.png\" background-size=\"400px\" background-opacity=\"70%\" background-position=\"50% 75%\"}\n\n<br/>\n\n::: columns\n::: {.column width=\"80%\"}\n1.  Find the correlation between two variables\n2.  Build and interpret a linear regression model\n3.  Make predictions using a linear regression model\n4.  Plot the line of best fit on a scatterplot\n:::\n:::\n\n::: {.absolute top=\"80%\" left=\"50%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n## A Note about Regression\n\n<br>\n\nRemember that, BEFORE building a model, you should conduct an **exploratory data analysis**.\n\n<br>\n\n. . .\n\nYou will almost certainly need to do some data wrangling and visualizations before the model analysis.\n\n<br>\n\n. . .\n\nFor this lessons example we will be using a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n## Correlation Coefficient (Ex1)\n\n::: {.absolute top=\"0%\" left=\"90%\" width=\"100\"}\n![](images_lecture/participate_icon.png)\n:::\n\n<font size=\"6\"> **Correlation coefficient**: a number between -1 and 1 indicating the strength of the linear relationship between two numerical variables.\n\nMatch the following graphs with the most appropriate correlation coefficient: </font>\n\n::: fragment\n1.      a) -0.2     b) 0     c) 0.4     d) 0.7\n\n![](images_lecture/cor_0.4.png){height=\"3in\"}\n:::\n\n## Correlation Coefficient (Ex2)\n\n::: {.absolute top=\"0%\" left=\"90%\" width=\"100\"}\n![](images_lecture/participate_icon.png)\n:::\n\n<font size=\"6\"> Match the following graph with the most appropriate correlation coefficient: </font>\n\n2.      a) -1     b) -0.75     c) -0.9     d) 1\n\n![](images_lecture/cor_-1.png){height=\"3in\"}\n\n## Correlation Coefficient (Ex3)\n\n::: {.absolute top=\"0%\" left=\"90%\" width=\"100\"}\n![](images_lecture/participate_icon.png)\n:::\n\n<font size=\"6\"> Match the following graph with the most appropriate correlation coefficient: </font>\n\n3.  Distance traveled vs the amount of gas in the car.\n    \n     a . Exactly -1\n     \n     b . Between -1 and 0\n     \n     c . About 0\n     \n     d . Between 0 and 1\n     \n     e . Exactly 1\n\n## Correlation Coefficient (continued) {.scrollable}\n\n<font size=\"6\"> The following code shows three different options for calculating the correlation between two variables within the `penguins` dataset. </font>\n\n::: panel-tabset\n## Correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Option 1\npenguin_sub %>%\n  select(flipper_length_mm, body_mass_g) %>% \n  cor()\n# Option 2\npenguin_sub %>%\n    summarize(cor = cor(flipper_length_mm, body_mass_g) )\n# Option 3\ncor(penguins$flipper_length_mm, penguins$body_mass_g)\n```\n:::\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\") %>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n::: fragment\n<font size=\"6\"> You will most likely need to filter out missing data beforehand OR set `use = \"complete.obs\"` inside the `cor()` function. This is the equivalent of when we set `na.rm = TRUE` in other summary functions. </font>\n:::\n\n## Simple Linear Regression (SLR)\n\n-   **Definition**: Simple linear regression: models the relationship between a response (y) variable and one explanatory (x) variable.\n\n. . .\n\n-   Essentially, we are finding the **line of best fit** for a scatterplot between 'x' and 'y'.\n\n## SLR (continued)\n\n**Equation** of a regression line: $$\\hat{y} = b_0 + b_1*x$$\n\n<br>\n\n::: incremental\n-   $b_0$ : intercept; the **expected** value of $\\hat{y}$ when $x = 0$\n\n-   $b_1$ : slope; for every 1 unit increase in x, then $\\hat{y}$ increases **on average** by $b_1$\n\n-   **fitted values**: $\\hat{y}$; the predicted value on the regression line\n\n-   **residuals**: $y - \\hat{y}$; error in prediction\n:::\n\n## Example 1: Model {auto-animate=\"true\"}\n\nConsider a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n. . .\n\n::: panel-tabset\n## Model\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build a model\nmodel_penguin <- lm(body_mass_g ~ flipper_length_mm, data = penguin_sub)\n```\n:::\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\")%>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n## Example 1: Model {.scrollable auto-animate=\"true\"}\n\nConsider a subset of the `penguins` dataset that only includes `male` penguins from the `Chinstrap` species and `Dream` island. This is stored in `penguin_sub`.\n\n::: panel-tabset\n## Model\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build a model\n\nmodel_penguin <- lm(body_mass_g ~ flipper_length_mm, data = penguin_sub)\n\n#Summarize the model\nsummary(model_penguin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm, data = penguin_sub)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-521.72 -177.33  -23.06  117.51  658.82 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -4111.348   1600.726  -2.568   0.0151 *  \nflipper_length_mm    40.269      8.004   5.031 1.81e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 274.8 on 32 degrees of freedom\nMultiple R-squared:  0.4417,\tAdjusted R-squared:  0.4242 \nF-statistic: 25.31 on 1 and 32 DF,  p-value: 1.814e-05\n```\n:::\n:::\n\n\n## Data: penguin_sub\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguins %>% \n  filter(sex == \"male\", species == \"Chinstrap\", island == \"Dream\") %>% \n  mutate(id = seq(1:34))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 9\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n```\n:::\n:::\n\n:::\n\n## Example 1: Plot regression line\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot relationship of variables\nggplot(penguin_sub, aes(x = flipper_length_mm, y = body_mass_g))+\n    geom_point()\n```\n\n::: {.cell-output-display}\n![](lec08_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_penguin)$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Estimate  Std. Error   t value     Pr(>|t|)\n(Intercept)       -4111.34753 1600.725516 -2.568428 1.508617e-02\nflipper_length_mm    40.26936    8.003689  5.031349 1.814086e-05\n```\n:::\n:::\n\n:::\n\n## Example 1: Plot regression line {.scrollable}\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\n# Add line of best fit\nggplot(penguin_sub, aes(x = flipper_length_mm, y = body_mass_g))+\n    geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](lec08_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_penguin)$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Estimate  Std. Error   t value     Pr(>|t|)\n(Intercept)       -4111.34753 1600.725516 -2.568428 1.508617e-02\nflipper_length_mm    40.26936    8.003689  5.031349 1.814086e-05\n```\n:::\n:::\n\n:::\n\n## Example 1: Residuals {.scrollable}\n\n::: panel-tabset\n## Visualizing\n\n<https://northwestern-university.shinyapps.io/lec08_regression/>\n\n## Calculating\n\nPredict a penguin's `body_mass_g` using `flipper_length_mm`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_sub <- penguin_sub %>% \n  mutate(fitted = fitted(model_penguin),\n         residuals = residuals(model_penguin))\n\nglimpse(penguin_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 11\n$ species           <fct> Chinstrap, Chinstrap, Chinstrap, Chinstrap, Chinstra~\n$ island            <fct> Dream, Dream, Dream, Dream, Dream, Dream, Dream, Dre~\n$ bill_length_mm    <dbl> 50.0, 51.3, 52.7, 51.3, 51.3, 51.7, 52.0, 50.5, 50.3~\n$ bill_depth_mm     <dbl> 19.5, 19.2, 19.8, 18.2, 19.9, 20.3, 18.1, 19.6, 20.0~\n$ flipper_length_mm <int> 196, 193, 197, 197, 198, 194, 201, 201, 197, 195, 19~\n$ body_mass_g       <int> 3900, 3650, 3725, 3750, 3700, 3775, 4050, 4050, 3300~\n$ sex               <fct> male, male, male, male, male, male, male, male, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n$ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1~\n$ fitted            <dbl> 3781.446, 3660.638, 3821.716, 3821.716, 3861.985, 37~\n$ residuals         <dbl> 118.55366, -10.63827, -96.71570, -71.71570, -161.985~\n```\n:::\n:::\n\n:::\n\n## Example 1: Predicting\n\n::: {.absolute top=\"0%\" left=\"90%\" width=\"100\"}\n![](images_lecture/participate_icon.png)\n:::\n\nRecall the equation of the regression line is\n\n\n$$\\widehat{\\hbox{body_mass_g} } = -4111.3 + 40.3*\\hbox{flipper_length}$$\n\n\n<br>\n\nYou find a new `male` penguin from the `Chinstrap` species and `Dream` island that has a flipper length of 220 mm. What do you predict his weight to be in grams?\n\n::: fragment\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n-4111.3 + 40.3*220\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4754.7\n```\n:::\n:::\n\n:::\n",
    "supporting": [
      "lec08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}