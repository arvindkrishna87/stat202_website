{
  "hash": "a3ed87abe5be37a1052dd58a418062ee",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization <br> Chapter 2.4 - 2.6\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\n\nlogo: \"www/nu_logo.png\"\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\n\nexecute:\n  message: false\n  warning: false\n  echo: true\n\nserver: shiny\n---\n\n\n\n\n\n## Today's goals {background-image=\"www/ggplot2_masterpiece.png\" background-size=\"400px\" background-opacity=\"50%\" background-position=\"85% 50%\"}\n\n<br/>\n\n::: columns\n::: {.column width=\"60%\"}\n1.  Create a linegraph\n2.  Create a histogram\n3.  Properly describe a linegraph and histogram\n4.  Facet graphs based on subgroups\n:::\n:::\n\n\n::: {.absolute top=\"77%\" left=\"85%\" width=\"500\"}\n::: {style=\"opacity:0.75; font-size: 0.5em\"}\nArtwork by @allison_horst\n:::\n:::\n\n\n## 5NG#2: Linegraphs\n\nLinegraphs show the **relationship** between 2 **numerical** variables.\n\n<br>\n\nThe explanatory (x-axis) variable **must be of** sequential ordering. Ex:\n\n<br>\n\n**Linegraph syntax in R:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= my_data, mapping = aes(x = var1, y = var2)) +\n  geom_line()\n```\n:::\n\n\n\n## 5NG#2: Linegraphs\n\nWhen describing linegraphs...\n\n-   Look for pattern going from left to right.\n-   Classify association as positive, negative, or no association.\n-   Classify relationship as linear or non linear.\n-   Check x and y scales to make sure they are appropriate.\n\n\n## 5NG#3: Histograms\n\n-   Histograms are used to visualize the **distribution** of a single **numerical** variable.\n\n-   Histograms display **numerical** data by grouping data into bins of equal width.\n\n-   There is **no** 'y' position aesthetic for `geom_histogram()` because we are investigating a single variable.\n\n\n## 5NG#3: Histograms {.smaller}\n\n**Histogram syntax in R:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= my_data, aes(x = var1)) +\n  geom_histogram(color = \"white\", fill = \"blue\", bins = 10)\n```\n:::\n\n\n<br>\n\nThere are 3 things we look and describe when inspecting a histogram:\n\n-   shape (skew and modality)\n-   center (mean or median)\n-   spread (range, IQR, or standard deviation)\n\n- not all distributions have a simple recognizable shape\n\n\n::: footer\nType `colors()` in the **console** to view all possible colors.\n:::\n\n## 5NG#3: Histograms\n\n::: {layout=\"[30,-5,30,-5,30],[30,-5,30,-5,30],[30,-5,30,-5,30]\"}\n![](www/fig_03unimodal1.png)\n\n![](www/fig_03unimodal2.png)\n\n![](www/fig_03unimodal3.png)\n\n\n![](www/fig_03bimodal1.png)\n\n![](www/fig_03bimodal3.png)\n\n![](www/fig_03bimodal2.png)\n\n\n![](www/fig_03multimodal1.png)\n\n![](www/fig_03multimodal2.png)\n\n![](www/fig_03uniform.png)\n:::\n\n## Example 1: Histogram bins {.scrollable .smaller}\n\nChoosing an appropriate bin size and describe the distribution of penguin body mass.\n\n::: {.panel-tabset}\n\n## Plot\n\n\n::: {.cell .panel-sidebar}\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"bin1-label\" for=\"bin1\">Number of bins:</label>\n<input class=\"js-range-slider\" id=\"bin1\" data-skin=\"shiny\" data-min=\"1\" data-max=\"50\" data-from=\"30\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.8\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n</div>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Is 5 bins appropriate?</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Is 30 bins appropriate?</p>\n```\n:::\n:::\n\n::: {.cell .panel-fill}\n::: {.cell-output-display}\n```{=html}\n<div id=\"Ex1Plot\" class=\"shiny-plot-output\" style=\"width:100%;height:400px;\"></div>\n```\n:::\n:::\n\n::: {.cell context='server'}\n\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel~\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse~\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ~\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ~\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186~\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ~\n$ sex               <fct> male, female, female, NA, female, male, female, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n```\n:::\n:::\n\n:::\n\n\n<br>\n\nHelpful guidelines:\n\n- Larger number of observations generally correspond to larger number of bins needed.\n\n- You will generally need to test **several** different number of bins to learn about the data and find an appropriate value.\n\n- Sturges Rule of Thumb for unimodal symmetric distributions: bins = 1 + 3.322*log(n)\n\n-  Sturgeâ€™s rule is not great if the data is severely skewed, multi-modal, or for an extremely large number of observations. But it could give you a starting place and then you will want to increase the number of bins until you can properly see the shape.\n\n## Example 2: Histogram bins {.scrollable}\n\nChoosing an appropriate bin size and describe the distribution of penguin flipper length.\n\n\n::: {.cell .panel-sidebar}\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"bin2-label\" for=\"bin2\">Number of bins:</label>\n<input class=\"js-range-slider\" id=\"bin2\" data-skin=\"shiny\" data-min=\"1\" data-max=\"50\" data-from=\"30\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.8\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n</div>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Is 10 bins appropriate?</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Is 15 bins appropriate?</p>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<br/>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<p>Is 25 bins appropriate?</p>\n```\n:::\n:::\n\n::: {.cell .panel-fill}\n::: {.cell-output-display}\n```{=html}\n<div id=\"Ex2Plot\" class=\"shiny-plot-output\" style=\"width:100%;height:400px;\"></div>\n```\n:::\n:::\n\n::: {.cell context='server'}\n\n:::\n\n\n\n## Faceting {.scrollable .smaller}\n\n- Faceting is used to make the same plot for different subgroups of the dataset.\n\n- This is useful for comparing the same variable across different subgroups in the dataset.\n\n- `facet_wrap(~var)` can be added on to ANY plot type (scatterplot, linegraph, histogram, boxplot, barplot)\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm)) +\n    geom_histogram(color = \"white\", fill = \"tomato1\", bins = 11) +\n  facet_wrap(~ species)\n```\n:::\n\n\n![](www/fig_03facet.png){#id .class width=\"800px\" height=\"600px\"}\n\n\n## Common Coding Errors {.scrollable}\n\nWhich of the following are correct?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm)) +\n  geom_histogram(aes(color = \"white\"))\n```\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=flipper_length_mm)) +\n  geom_histogram(color = \"white\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins) +\n  geom_histogram(x = flipper_length_mm, color = \"white\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins) +\n  geom_histogram(aes(x = flipper_length_mm) , color = \"white\")\n```\n:::\n\n\n\n## Extra information and resources {.scrollable}\n\n<br>\n\n[Wikipedia bin size info](https://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width)\n\npreservec054710fdf0a5dad\npreserve7cba8cd527c97158\npreservee3bc3dc28a15046b\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-javascript\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/ion.rangeSlider.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.9.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/strftime\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime-min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-css\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/ion.rangeSlider.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-javascript\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/ion.rangeSlider.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.9.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/strftime\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime-min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-css\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/ion.rangeSlider.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]}]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"assertthat\",\"backports\",\"base\",\"broom\",\"bslib\",\"cachem\",\"cellranger\",\"cli\",\"colorspace\",\"compiler\",\"crayon\",\"datasets\",\"DBI\",\"dbplyr\",\"digest\",\"dplyr\",\"ellipsis\",\"evaluate\",\"fansi\",\"fastmap\",\"forcats\",\"fs\",\"gargle\",\"generics\",\"ggplot2\",\"glue\",\"googledrive\",\"googlesheets4\",\"graphics\",\"grDevices\",\"grid\",\"gtable\",\"haven\",\"hms\",\"htmltools\",\"httpuv\",\"httr\",\"jquerylib\",\"jsonlite\",\"knitr\",\"later\",\"lifecycle\",\"lubridate\",\"magrittr\",\"memoise\",\"methods\",\"mime\",\"modelr\",\"munsell\",\"palmerpenguins\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"readxl\",\"reprex\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"rvest\",\"sass\",\"scales\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tools\",\"tzdb\",\"utf8\",\"utils\",\"vctrs\",\"withr\",\"xfun\",\"xml2\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.2.1\",\"1.4.1\",\"4.1.3\",\"1.0.0\",\"0.4.0\",\"1.0.6\",\"1.1.0\",\"3.3.0\",\"2.0-3\",\"4.1.3\",\"1.5.1\",\"4.1.3\",\"1.1.3\",\"2.2.1\",\"0.6.29\",\"1.0.9\",\"0.3.2\",\"0.15\",\"1.0.3\",\"1.1.0\",\"0.5.1\",\"1.5.2\",\"1.2.0.9002\",\"0.1.3\",\"3.3.6\",\"1.6.2\",\"2.0.0\",\"1.0.0.9000\",\"4.1.3\",\"4.1.3\",\"4.1.3\",\"0.3.0\",\"2.5.0\",\"1.1.1\",\"0.5.3\",\"1.6.5\",\"1.4.3\",\"0.1.4\",\"1.8.0\",\"1.39\",\"1.3.0\",\"1.0.1\",\"1.8.0\",\"2.0.3\",\"2.0.1\",\"4.1.3\",\"0.12\",\"0.1.8\",\"0.5.0\",\"0.1.0\",\"1.8.0\",\"2.0.3\",\"1.2.0.1\",\"0.3.4\",\"2.5.1\",\"1.0.9\",\"2.1.2\",\"1.4.0\",\"2.0.1\",\"1.0.4\",\"2.14\",\"0.13\",\"1.0.2\",\"0.4.2\",\"1.2.0\",\"1.7.2\",\"4.1.3\",\"1.7.6\",\"1.4.0\",\"3.1.8\",\"1.2.0\",\"1.1.2\",\"1.3.2\",\"4.1.3\",\"0.3.0\",\"1.2.2\",\"4.1.3\",\"0.4.1\",\"2.5.0\",\"0.31\",\"1.3.3\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preserve7cba8cd527c97158": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(palmerpenguins)\nlibrary(tidyverse)\noutput$Ex2Plot <- renderPlot({\n  x <- penguins$flipper_length_mm \n  ggplot(penguins, aes(x=x)) +\n    geom_histogram(color = \"white\", \n                   fill = \"tomato1\", \n                   bins = input$bin2)+\n    labs(title = \"Palmer Penguins Distribution of Flipper Length\",\n           x = \"Flipper Length (mm)\")\n})\n</script>\n",
      "preservec054710fdf0a5dad": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(palmerpenguins)\nlibrary(tidyverse)\noutput$Ex1Plot <- renderPlot({\n  x <- penguins$body_mass_g \n  ggplot(penguins, aes(x=x)) +\n    geom_histogram(color = \"white\", \n                   fill = \"lightblue\", \n                   bins = input$bin1)+\n    labs(title = \"Palmer Penguins Distribution of Body Mass\",\n           x = \"Body Mass (g)\")\n})\n</script>\n",
      "preservee3bc3dc28a15046b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n"
    },
    "postProcess": true
  }
}