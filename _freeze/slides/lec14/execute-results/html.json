{
  "hash": "038f243419f0e8ab0a378809eae82c2e",
  "result": {
    "markdown": "---\ntitle: \"Distributions <br> Section 9.1\"\ninstitute: \"Department of Statistics and Data Science <br> STAT 202\"\n\nlogo: nu_logo.png\nformat: \n  revealjs:\n    theme: [default, nu_theme.scss]\n    chalkboard:\n      theme: whiteboard\n      toggleNotesButton: false\n    menu:\n        side: right\n    code-line-numbers: false\n    scrollable: true\n\nexecute:\n  message: false\n  warning: false\n  echo: true\n---\n\n\n## The Standard Normal Distribution\n\n::: columns\n::: {.column width=\"50%\"}\n<br>\n\n<img src=\"images_lecture/standard_normal.png\" style=\"float: center;\"/>\n:::\n\n::: {.column width=\"50%\"}\n**Properties**\n\n::: incremental\n-   The area under the curve is 1 (or 100%)\n-   The mean of the distribution is 0\n-   The standard deviation of the distribution is 1\n:::\n:::\n:::\n\n::: footer\nCan use the normal distribution in R or at https://homepage.divms.uiowa.edu/\\~mbognar/applets/normal.html\n:::\n\n## Empirical Rule {.smaller}\n\n::: columns\n::: {.column width=\"48%\"}\n<img src=\"images_lecture/standard_normal.png\" style=\"float: left;\"/>\n:::\n\n::: {.column width=\"52%\"}\n::: incremental\n-   Around **68%** of values are within **one** standard deviation from the mean.\n-   Around **95%** of values are within **two** standard deviations from the mean.\n-   Around **99.7%** of values are within **three** standard deviations from the mean.\n:::\n:::\n:::\n\n. . .\n\n**Why is this useful?** If we know the mean and standard deviation of a variable that follows the normal distribution, we can calculate the probability of an event occurring.\n\n. . .\n\n**How is this applicable?** We can transform any normally distributed variable into a standard normal distribution with **standardization**.\n\n. . .\n\n$$\\hbox{STAT} = \\frac{X - mean(X)}{sd(X)}$$\n\n## The Normal Distribution\n\n::: incremental\n-   Changing $\\mu$ (mu, the mean), changes where the center (peak) of the distribution is located.\n-   Changing $\\sigma$ (sigma, the standard deviation), changes the spread of the distribution.\n-   The shape of the distribution never changes. It is always unimodal and symmetric (no skew).\n:::\n\n. . .\n\n::: {layout=\"[30,30,30]\"}\n![](images_lecture/norm_mean1.png)\n\n![](images_lecture/norm_sd1.png)\n\n![](images_lecture/norm_meansd1.png)\n:::\n\n## The T-Distribution {.smaller}\n\nThe t-distribution is similar in shape to a normal distribution.\n\n<br>\n\n::: columns\n::: {.column width=\"48%\"}\n<center>![](images_lecture/t-dist.png)</center>\n:::\n\n::: {.column width=\"52%\"}\n::: incremental\n-   Completely characterized by it's degrees of freedom (df). A parameter defined based on the sample size $n$.\n-   As we make the degrees of freedom ($df$) larger the t-distribution is getting closer to the standard normal distribution.\n-   The normal distribution assumes that you know the population standard deviation, $\\sigma$. The t-distribution is used if you only know the sample standard deviation, $s$ (ie: $\\sigma$ unknown).\n:::\n:::\n:::\n\n## Normal and T Distribution in R\n\n**Normal distribution:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the probability of being to the left of quantile -1\n# Default is mean = 0 and sd = 1\npnorm(q = -1)\n# Calculate the quantile, with 20% of data to the left\nqnorm(p = .2, mean = 0, sd = 1)\n\n# lower.tail = FALSE changes it to data/area to the right\n# specify mean and sd if you are not using a standard normal distribution\nqnorm(p = .025, mean = 10, sd = 2, lower.tail = FALSE)\n```\n:::\n\n\n**T-distribution:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# instead of pnorm we now use pt\n# instead of qnorm we now use qt\n# no mean and sd! Now we use df\npt(q = -1, df = 9)\nqt(p = .025, df = 9)\nqt(p = .025, df = 9, lower.tail = FALSE)\n```\n:::\n",
    "supporting": [
      "lec14_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}